{
  "rules": {
    ".read": false,
    ".write": false,

    // Requests
    "requests": {
      ".read": true,
      ".indexOn": "status",

      "$requestId": {
        // TODO: Allow the user who created the request to edit it
        // data.child('createdBy').val() === auth.uid
        ".write": "auth != null && (!data.exists() || root.child('users/' + auth.uid + '/role').val() === 'moderator' || root.child('users/' + auth.uid + '/role').val() === 'admin')",
        ".validate": "newData.hasChildren(['title', 'text', 'geo', 'created', 'createdBy'])",

        "imageUrls": {
          "$imageUrl": {
            ".validate": "newData.isString()"
          }
        },
        "title": { ".validate": "newData.isString()" },
        "text": { ".validate": "newData.isString()" },
        "geo": {
          ".validate": "newData.hasChildren(['lat', 'lng'])",

          "lat": { ".validate": "-90 <= newData.val() && newData.val() <= 90" },
          "lng": { ".validate": "-180 <= newData.val() && newData.val() <= 180" }
        },
        "created": { ".validate": "newData.val() === now" },
        "createdBy": { ".validate": "newData.val() === auth.uid" },
        "status": { ".validate": "(!data.exists() && newData.val() === 'new') || (data.exists() && (newData.val() === 'new' || newData.val() === 'approved' || newData.val() === 'declined'))" },

        "$other": { ".validate": false }
      }
    },

    // Users
    "users": {
      "$userId": {
        ".read": "auth.uid === $userId",
        // TODO: Move user role to a different object if we want to allow the user to write to their data

        "role": {
          ".validate": "newData.isString()"
        },

        "$other": { ".validate": false }
      }
    }
  }
}
