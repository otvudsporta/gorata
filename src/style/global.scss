@import 'variables';
@import 'mixins';

// Full-height content
html,
body {
  height: 100%;
  font-family: $font-family;
  font-size: $font-size;
}

body {
  line-height: 1.22;
  color: $foreground;
}

// Define heading classes
// sass-lint:disable single-line-per-selector
h1, .h1 { font-size: $h1-font-size; }
h2, .h2 { font-size: $h2-font-size; }
h3, .h3 { font-size: $h3-font-size; }
h4, .h4 { font-size: $h4-font-size; }
h5, .h5 { font-size: $h5-font-size; }
h6, .h6 { font-size: $h6-font-size; }
// sass-lint:enable single-line-per-selector

a {
  cursor: pointer;

  color: $primary-dark;
  transition: color $animation-duration $animation-easing;

  &:hover {
    color: $primary-darker;
  }

  &.underlined {
    transition: border $animation-duration $animation-easing, color $animation-duration $animation-easing;
    border-bottom: 0px solid transparent;

    &:hover {
      border-bottom: 4px solid $primary-light;
    }
  }
}

fieldset {
  border: 0;
}

iframe {
  border: 0;
}

textarea {
  resize: vertical;
}

// Colors
@include bg-variant('.bg-foreground', $foreground);
@include bg-variant('.bg-neutral', $neutral);
@include bg-variant('.bg-neutral-light', $neutral-light);
@include bg-variant('.bg-neutral-lighter', $neutral-lighter);
@include bg-variant('.bg-primary', $primary);
@include bg-variant('.bg-success', $success);
@include bg-variant('.bg-info', $info);
@include bg-variant('.bg-warning', $warning);
@include bg-variant('.bg-danger', $danger);

@include text-emphasis-variant('.color-foreground', $foreground);
@include text-emphasis-variant('.color-neutral', $neutral);
@include text-emphasis-variant('.color-neutral-light', $neutral-light);
@include text-emphasis-variant('.color-neutral-lighter', $neutral-lighter);
@include text-emphasis-variant('.color-primary', $primary);
@include text-emphasis-variant('.color-success', $success);
@include text-emphasis-variant('.color-info', $info);
@include text-emphasis-variant('.color-warning', $warning);
@include text-emphasis-variant('.color-danger', $danger);

// Layout
.container {
  margin: 0 auto;
  width: $sm-max;
  max-width: 100%;
  padding: 2 * $spacing;
}

// Overflow
.overflow-hidden {
  @include overflow(hidden, hidden);
}

// Positioning
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.stretch {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Responsive
@media (max-width: $xxs-max) {
  @include responsive-invisibility('.hidden-xxs');
}

@media (min-width: $xs-min) and (max-width: $xs-max) {
  @include responsive-invisibility('.hidden-xs');
}

@media (min-width: $sm-min) and (max-width: $sm-max) {
  @include responsive-invisibility('.hidden-sm');
}

@media (min-width: $md-min) and (max-width: $md-max) {
  @include responsive-invisibility('.hidden-md');
}

@media (min-width: $lg-min) and (max-width: $lg-max) {
  @include responsive-invisibility('.hidden-lg');
}

@media (min-width: $xl-min) and (max-width: $xl-max) {
  @include responsive-invisibility('.hidden-xl');
}

@media (min-width: $xxl-min) {
  @include responsive-invisibility('.hidden-xxl');
}

// Spacing classes, inspired by
// http://v4-alpha.getbootstrap.com/components/utilities/#spacing
// Margin
// Positive
@include generate-spacer('.mt', margin, top, $spacing);
@include generate-spacer('.mr', margin, right, $spacing);
@include generate-spacer('.mb', margin, bottom, $spacing);
@include generate-spacer('.ml', margin, left, $spacing);
@include generate-spacer('.mv', margin, vertical, $spacing);
@include generate-spacer('.mh', margin, horizontal, $spacing);
@include generate-spacer('.ma', margin, all, $spacing);

// Negative
@include generate-spacer('.mt-n', margin, top, -$spacing);
@include generate-spacer('.mr-n', margin, right, -$spacing);
@include generate-spacer('.mb-n', margin, bottom, -$spacing);
@include generate-spacer('.ml-n', margin, left, -$spacing);
@include generate-spacer('.mv-n', margin, vertical, -$spacing);
@include generate-spacer('.mh-n', margin, horizontal, -$spacing);
@include generate-spacer('.ma-n', margin, all, -$spacing);

.ma-auto {
  margin: auto;
}

// Padding
@include generate-spacer('.pt', padding, top, $spacing);
@include generate-spacer('.pr', padding, right, $spacing);
@include generate-spacer('.pb', padding, bottom, $spacing);
@include generate-spacer('.pl', padding, left, $spacing);
@include generate-spacer('.pv', padding, vertical, $spacing);
@include generate-spacer('.ph', padding, horizontal, $spacing);
@include generate-spacer('.pa', padding, all, $spacing);

.pa-auto {
  padding: auto;
}

// Text
.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.hidden {
  display: none;
}

// Misc
.border-radius {
  border-radius: $border-radius;
}

.pointer {
  cursor: pointer;
}
